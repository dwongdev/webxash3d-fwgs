name: Build and Publish Package

on:
  push:
    tags:
      - 'cs16-client@*'
      - 'hlsdk-portable@*'
      - 'xash3d-fwgs@*'
      - 'webxash3d-mserver@*'

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      package: ${{ steps.parse_tag.outputs.package }}
      version: ${{ steps.parse_tag.outputs.version }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          registry-url: 'https://registry.npmjs.org/'

      - name: Parse tag to get package and version
        id: parse_tag
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          echo "Full tag: $TAG"
          PACKAGE=${TAG%@*}
          VERSION=${TAG#*@}
          echo "package=$PACKAGE" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Upload workspace
        uses: actions/upload-artifact@v4
        with:
          name: workspace
          path: .
          retention-days: 1

  build:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Download workspace
        uses: actions/download-artifact@v4
        with:
          name: workspace

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Ensure dist is writable
        run: |
          rm -rf packages/${{ needs.setup.outputs.package }}/dist
          mkdir -p packages/${{ needs.setup.outputs.package }}/dist
          chmod -R u+w packages/${{ needs.setup.outputs.package }}/dist

      - name: Make build scripts executable
        run: |
          find . -name '*.sh' -exec chmod +x {} \;
          find . -name '*waf' -exec chmod +x {} \;

      - name: Build package
        run: cd packages/${{ needs.setup.outputs.package }} && pnpm run build

      - name: Upload built package
        uses: actions/upload-artifact@v4
        with:
          name: built-package
          path: packages/${{ needs.setup.outputs.package }}/
          retention-days: 1

  publish:
    runs-on: ubuntu-latest
    needs: [setup, build]
    steps:
      - name: Download built package
        uses: actions/download-artifact@v4
        with:
          name: built-package
          path: package

      - name: Configure npm auth
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish NPM package
        run: cd package && npm publish --access public

  release:
    runs-on: ubuntu-latest
    needs: [setup, build, publish]
    steps:
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: "${{ needs.setup.outputs.package }} v${{ needs.setup.outputs.version }}"
          body: |
            ğŸ”– **Release for** `${{ needs.setup.outputs.package }}`
            ğŸ“¦ **Version:** `${{ needs.setup.outputs.version }}`
            ğŸš€ **NPM:** [https://www.npmjs.com/package/${{ needs.setup.outputs.package }}](https://www.npmjs.com/package/${{ needs.setup.outputs.package }}/v/${{ needs.setup.outputs.version }})

            ğŸ“„ [Changelog](https://github.com/${{ github.repository }}/blob/${{ github.ref_name }}/packages/${{ needs.setup.outputs.package }}/CHANGELOG.md)
